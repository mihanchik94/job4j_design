Задание рассматривается на 64-битной JDK.
Создали несколько экземпляров класса объекта User и рассчитали их примерный объем занимаемой памяти.
Примеры разных типов объектов с занимаемой ими памятью ниже:
new User() - пустой объект, имеет минимальную размерность в 16 байт (12 байт "заголовок" + 4 байта для получения размерности, кратной 8 байтам),
new User(1) - объект содержит в себе int, поэтому размерность объекта 16 байт (12 байт - объект + 4 байта на int),
new User("n") - объект содержит в себе String, поэтому размерность объекта 64 байта (16 байт - объект + 48 - String)
new User(int id, "n") - объект содержит в себе int и String аоэтому размерность: (12 байт - объект + 4 байта на int + 48 - String)


Задали в VM options максимальный и стартовый размер heap по 4мб с помощью
ключей -Xmx4m и -Xs4m (Edit Configurations -> VM Options).
Рассматриваем Класс GCDemo:
Задаем цикл и в цикле создаем новый объект.
Новые объекты попадают в область, называемую eden.
Как только eden заполнен происходит minor GC: очищаются объекты из young generation, так как они без ссылок.
При создании слишком большого количества объектов может возникнуть java.lang.OutOfMemoryError:

Ошибка переодически возникает при создании 26604 бъектов.